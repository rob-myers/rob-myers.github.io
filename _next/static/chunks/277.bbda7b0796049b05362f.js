"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[277],{33277:function(e,n,t){t.r(n),t.d(n,{default:function(){return M}});var r=t(52209),o=t(92809),i=t(30266),s=t(809),u=t.n(s),a=t(59748),c=t(88269),l=t(88767),h=t(43350),f=t(48103),d=t(84273),v=t(68216),p=t(25997),g=function(){function e(){(0,v.Z)(this,e)}return(0,p.Z)(e,null,[{key:"roundNumber",value:function(e,n){var t=Math.pow(10,n);return Math.round(e*t)/t}},{key:"sample",value:function(e){return e[Math.floor(Math.random()*e.length)]}},{key:"distanceToSquared",value:function(e,n){var t=e.x-n.x,r=e.y-n.y;return t*t+r*r}},{key:"isPointInPoly",value:function(e,n){for(var t=!1,r=-1,o=e.length,i=o-1;++r<o;i=r)(e[r].y<=n.y&&n.y<e[i].y||e[i].y<=n.y&&n.y<e[r].y)&&n.x<(e[i].x-e[r].x)*(n.y-e[r].y)/(e[i].y-e[r].y)+e[r].x&&(t=!t);return t}},{key:"isVectorInPolygon",value:function(e,n,t){var r=1e5,o=-1e5,i=[];return n.vertexIds.forEach((function(e){r=Math.min(t[e].y,r),o=Math.max(t[e].y,o),i.push(t[e])})),!!(e.y<o+.5&&e.y>r-.5&&this.isPointInPoly(i,e))}},{key:"triarea2",value:function(e,n,t){var r=n.x-e.x,o=n.y-e.y;return-((t.x-e.x)*o-r*(t.y-e.y))}},{key:"vequal",value:function(e,n){return this.distanceToSquared(e,n)<1e-5}}]),e}(),y=function(){function e(n){(0,v.Z)(this,e),this.content=[],this.scoreFunction=n}return(0,p.Z)(e,[{key:"push",value:function(e){this.content.push(e),this.sinkDown(this.content.length-1)}},{key:"pop",value:function(){var e=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.bubbleUp(0)),e}},{key:"remove",value:function(e){var n=this.content.indexOf(e),t=this.content.pop();n!==this.content.length-1&&(this.content[n]=t,this.scoreFunction(t)<this.scoreFunction(e)?this.sinkDown(n):this.bubbleUp(n))}},{key:"size",value:function(){return this.content.length}},{key:"rescoreElement",value:function(e){this.sinkDown(this.content.indexOf(e))}},{key:"sinkDown",value:function(e){for(var n=this.content[e];e>0;){var t=(e+1>>1)-1,r=this.content[t];if(!(this.scoreFunction(n)<this.scoreFunction(r)))break;this.content[t]=n,this.content[e]=r,e=t}}},{key:"bubbleUp",value:function(e){for(var n=this.content.length,t=this.content[e],r=this.scoreFunction(t);;){var o=e+1<<1,i=o-1,s=null,u=-1/0;if(i<n){var a=this.content[i];(u=this.scoreFunction(a))<r&&(s=i)}if(o<n){var c=this.content[o];this.scoreFunction(c)<(null===s?r:u)&&(s=o)}if(null===s)break;this.content[e]=this.content[s],this.content[s]=t,e=s}}}]),e}(),b=function(){function e(){(0,v.Z)(this,e)}return(0,p.Z)(e,null,[{key:"init",value:function(e){for(var n=0;n<e.length;n++){var t=e[n];t.f=0,t.g=0,t.h=0,t.cost=1,t.visited=!1,t.closed=!1,t.parent=null}}},{key:"cleanUp",value:function(e){for(var n=0;n<e.length;n++){var t=e[n];delete t.f,delete t.g,delete t.h,delete t.cost,delete t.visited,delete t.closed,delete t.parent}}},{key:"heap",value:function(){return new y((function(e){return e.f}))}},{key:"search",value:function(e,n,t){this.init(e);var r=this.heap();for(r.push(n);r.size()>0;){var o=r.pop();if(o===t){for(var i=o,s=[];i.parent;)s.push(i),i=i.parent;return this.cleanUp(s),s.reverse()}o.closed=!0;for(var u=this.neighbours(e,o),a=0,c=u.length;a<c;a++){var l=u[a];if(!l.closed){var h=o.g+l.cost,f=l.visited;if(!f||h<l.g){if(l.visited=!0,l.parent=o,!l.centroid||!t.centroid)throw new Error("Unexpected state");l.h=l.h||this.heuristic(l.centroid,t.centroid),l.g=h,l.f=l.g+l.h,f?r.rescoreElement(l):r.push(l)}}}}return[]}},{key:"heuristic",value:function(e,n){return g.distanceToSquared(e,n)}},{key:"neighbours",value:function(e,n){for(var t=[],r=0;r<n.neighbours.length;r++)t.push(e[n.neighbours[r]]);return t}}]),e}(),m=t(79056),k=function(){function e(){(0,v.Z)(this,e)}return(0,p.Z)(e,null,[{key:"buildZone",value:function(e){var n=this,t=this._buildNavigationMesh(e);t.vertices.forEach((function(e){e.x=g.roundNumber(e.x,2),e.y=g.roundNumber(e.y,2)}));var r={};r.vertices=t.vertices;var o=this._buildPolygonGroups(t);return r.groups=new Array(o.length),o.forEach((function(e,t){var o=new Map;e.forEach((function(e,n){return o.set(e,n)}));var i=new Array(e.length);e.forEach((function(e,t){var s=[];e.neighbours.forEach((function(e){return s.push(o.get(e))}));var u=[];e.neighbours.forEach((function(t){return u.push(n._getSharedVerticesInOrder(e,t))}));var a=new f.dl(0,0);a.add(r.vertices[e.vertexIds[0]]),a.add(r.vertices[e.vertexIds[1]]),a.add(r.vertices[e.vertexIds[2]]),a.scale(1/3),a.x=g.roundNumber(a.x,2),a.y=g.roundNumber(a.y,2),i[t]={id:t,centroid:a,neighbours:s,portals:u,vertexIds:e.vertexIds}})),r.groups[t]=i})),r}},{key:"_buildNavigationMesh",value:function(e){return this._buildPolygonsFromTriang(e)}},{key:"_spreadGroupId",value:function(e){for(var n=new Set([e]);n.size>0;){var t=n;n=new Set,t.forEach((function(t){t.group=e.group,t.neighbours.forEach((function(e){void 0===e.group&&n.add(e)}))}))}}},{key:"_buildPolygonGroups",value:function(e){var n=this,t=e.polygons,r=[];return t.forEach((function(e){void 0!==e.group?r[e.group].push(e):(e.group=r.length,n._spreadGroupId(e),r.push([e]))})),r}},{key:"_buildPolygonNeighbours",value:function(e,n){var t=new Set,r=n[e.vertexIds[0]],o=n[e.vertexIds[1]],i=n[e.vertexIds[2]];return r.forEach((function(n){n!==e&&(o.includes(n)||i.includes(n))&&t.add(n)})),o.forEach((function(n){n!==e&&i.includes(n)&&t.add(n)})),t}},{key:"_buildPolygonsFromTriang",value:function(e){for(var n=this,t=[],r=[],o={},i=0;i<e.vs.length;i++)r.push(e.vs[i]),o[i]=[];for(var s=0;s<e.tris.length;s++){var u=(0,m.Z)(e.tris[s],3),a=u[0],c=u[1],l=u[2],h={vertexIds:[a,c,l]};t.push(h),o[a].push(h),o[c].push(h),o[l].push(h)}return t.forEach((function(e){e.neighbours=n._buildPolygonNeighbours(e,o)})),{polygons:t,vertices:r}}},{key:"_getSharedVerticesInOrder",value:function(e,n){var t=e.vertexIds,r=t[0],o=t[1],i=t[2],s=n.vertexIds,u=s.includes(r),a=s.includes(o),c=s.includes(i);return u&&a&&c?Array.from(t):u&&a?[r,o]:a&&c?[o,i]:u&&c?[i,r]:(console.warn("Error processing navigation mesh neighbors; neighbors with <2 shared vertices found."),[])}}]),e}(),w=function(){function e(){(0,v.Z)(this,e),this.portals=[]}return(0,p.Z)(e,[{key:"push",value:function(e,n){void 0===n&&(n=e),this.portals.push({left:e,right:n})}},{key:"stringPull",value:function(){var e,n,t,r=this.portals,o=[],i=0,s=0,u=0;e=r[0].left,n=r[0].left,t=r[0].right,o.push(e);for(var a=1;a<r.length;a++){var c=r[a].left,l=r[a].right;if(g.triarea2(e,t,l)<=0){if(!(g.vequal(e,t)||g.triarea2(e,n,l)>0)){o.push(n),n=e=n,t=e,s=i=s,u=i,a=i;continue}t=l,u=a}if(g.triarea2(e,n,c)>=0){if(!(g.vequal(e,n)||g.triarea2(e,t,c)<0)){o.push(t),n=e=t,t=e,s=i=u,u=i,a=i;continue}n=c,s=a}}return 0!==o.length&&g.vequal(o[o.length-1],r[r.length-1].left)||o.push(r[r.length-1].left),this.path=o,o}}]),e}(),x=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new f.dl,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new f.dl,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new f.dl;(0,v.Z)(this,e),this.a=n,this.b=t,this.c=r}return(0,p.Z)(e,[{key:"closestPointToPoint",value:function(e,n){var t,r,o=this.a,i=this.b,s=this.c;P.subVectors(i,o),Z.subVectors(s,o),I.subVectors(e,o);var u=P.dot(I),a=Z.dot(I);if(u<=0&&a<=0)return n.copy(o);S.subVectors(e,i);var c=P.dot(S),l=Z.dot(S);if(c>=0&&l<=c)return n.copy(i);var h=u*l-c*a;if(h<=0&&u>=0&&c<=0)return t=u/(u-c),n.copy(o).addScaledVector(P,t);E.subVectors(e,s);var f=P.dot(E),d=Z.dot(E);if(d>=0&&f<=d)return n.copy(s);var v=f*a-u*d;if(v<=0&&a>=0&&d<=0)return r=a/(a-d),n.copy(o).addScaledVector(Z,r);var p=c*d-f*l;if(p<=0&&l-c>=0&&f-d>=0)return N.subVectors(s,i),r=(l-c)/(l-c+(f-d)),n.copy(i).addScaledVector(N,r);var g=1/(p+v+h);return t=v*g,r=h*g,n.copy(o).addScaledVector(P,t).addScaledVector(Z,r)}},{key:"set",value:function(e,n,t){return this.a.copy(e),this.b.copy(n),this.c.copy(t),this}}]),e}(),P=new f.dl,Z=new f.dl,I=new f.dl,S=new f.dl,E=new f.dl,N=new f.dl;function O(e,n){var t="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=function(e,n){if(!e)return;if("string"===typeof e)return z(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return z(e,n)}(e))||n&&e&&"number"===typeof e.length){t&&(e=t);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,u=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return s=e.done,e},e:function(e){u=!0,i=e},f:function(){try{s||null==t.return||t.return()}finally{if(u)throw i}}}}function z(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var j,D=function(){function e(){(0,v.Z)(this,e),this.zones={};var n={point:new f.dl(0,0),triangle:new x,endPoint:new f.dl(0,0),closestNode:null,closestPoint:new f.dl(0,0),closestDistance:1/0};this.temp=n}return(0,p.Z)(e,[{key:"setZoneData",value:function(e,n){this.zones[e]=n}},{key:"getRandomNode",value:function(e,n,t,r){if(!this.zones[e])return new f.dl(0,0);t=t||null,r=r||0;var o=[];return this.zones[e].groups[n].forEach((function(e){t&&r?g.distanceToSquared(t,e.centroid)<r*r&&o.push(e.centroid):o.push(e.centroid)})),g.sample(o)||new f.dl(0,0)}},{key:"getClosestNode",value:function(e,n,t){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=this.zones[n].groups[t],i=this.zones[n].vertices,s=null,u=1/0;return o.forEach((function(n){var t=g.distanceToSquared(n.centroid,e);t<u&&(!r||g.isVectorInPolygon(e,n,i))&&(s=n,u=t)})),s}},{key:"findPath",value:function(e,n,t,r){var o=this.zones[t].groups[r],i=this.zones[t].vertices,s=this.getClosestNode(e,t,r,!0),u=this.getClosestNode(n,t,r,!0);if(!s||!u)return null;var a=b.search(o,s,u),c=function(e,n){for(var t=0;t<e.neighbours.length;t++)if(e.neighbours[t]===n.id)return e.portals[t]},l=new w;l.push(e);for(var h=0;h<a.length;h++){var d=a[h],v=a[h+1];if(v){var p=c(d,v);l.push(i[p[0]],i[p[1]])}}l.push(n),l.stringPull();var g=l.path.map((function(e){return new f.dl(e.x,e.y)}));return g.shift(),g}},{key:"getGroup",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.zones[e])return null;for(var r=null,o=Math.pow(50,2),i=this.zones[e],s=0;s<i.groups.length;s++){var u,a=i.groups[s],c=O(a);try{for(c.s();!(u=c.n()).done;){var l=u.value;if(t){var h=[i.vertices[l.vertexIds[0]],i.vertices[l.vertexIds[1]],i.vertices[l.vertexIds[2]]];if(g.isPointInPoly(h,n))return s}var f=g.distanceToSquared(l.centroid,n);f<o&&(r=s,o=f)}}catch(d){c.e(d)}finally{c.f()}}return r}},{key:"clampStep",value:function(e,n,t,r,o,i){var s=this.zones[r].vertices,u=this.zones[r].groups[o],a=[t],c={};c[t.id]=0;var l=this.temp;l.closestNode=null,l.closestPoint.set(0,0),l.closestDistance=1/0,l.endPoint.copy(n);for(var h=a.pop();h;h=a.pop()){l.triangle.set(s[h.vertexIds[0]],s[h.vertexIds[1]],s[h.vertexIds[2]]),l.triangle.closestPointToPoint(l.endPoint,l.point),l.point.distanceToSquared(l.endPoint)<l.closestDistance&&(l.closestNode=h,l.closestPoint.copy(l.point),l.closestDistance=l.point.distanceToSquared(l.endPoint));var f=c[h.id];if(!(f>2))for(var d=0;d<h.neighbours.length;d++){var v=u[h.neighbours[d]];v.id in c||(a.push(v),c[v.id]=f+1)}}return i.copy(l.closestPoint),l.closestNode}}],[{key:"createZone",value:function(e){return k.buildZone(e)}}]),e}(),V=t(83159),_=t(8311);function T(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function q(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?T(Object(t),!0).forEach((function(n){(0,o.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):T(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function M(){var e=(0,a.useState)([]),n=e[0],t=e[1],r=(0,a.useState)([]),o=r[0],s=r[1],c=(0,a.useMemo)((function(){return new D}),[]),v="myZone",p=(0,a.useRef)(0),g=(0,l.useQuery)("navpoly-demo",(0,i.Z)(u().mark((function e(){var n,t,r,o;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("/geomorph/g-301--bridge.json").then((function(e){return e.json()}));case 2:return n=e.sent,t=n.navPoly.map((function(e){return f.LA.from(e)})),r=d.J7.polysToTriangulation(t),o=D.createZone(r),c.setZoneData(v,o),e.abrupt("return",{pngRect:n.pngRect,navPoly:t,zone:o});case 8:case"end":return e.stop()}}),e)})))).data;return(0,a.useEffect)((function(){if(2===n.length){var e=c.getGroup(v,n[0]);null!==e&&s([n[0]].concat(c.findPath(n[0],n[1],v,e)||[]).map(f.dl.from))}else s([])}),[n]),(0,_.tZ)(V.Z,{gridBounds:h.l,initViewBox:h.r,maxZoom:6,children:(0,_.BX)("g",{className:A,ref:function(e){e&&(e.addEventListener("pointerdown",(function(){p.current=Date.now()})),e.addEventListener("pointerup",(function(e){if(Date.now()-p.current<200){var r=(0,d.zk)((0,d.Xs)(e));t(n.slice(0,1).concat(r))}})))},children:[g&&(0,_.BX)(_.HY,{children:[(0,_.tZ)("image",q(q({},g.pngRect),{},{className:"geomorph",href:"/geomorph/g-301--bridge.debug.png"})),g.navPoly.map((function(e){return(0,_.tZ)("path",{className:"navpoly",d:e.svgPath})})),g.zone.groups.map((function(e){return e.map((function(e){e.centroid;var n=e.vertexIds;return(0,_.tZ)("polygon",{className:"navtri",points:"".concat(n.map((function(e){return g.zone.vertices[e]})))})}))}))]}),(0,_.tZ)("polyline",{className:"navpath",points:"".concat(o)}),(0,_.tZ)("g",{className:"dots",children:n.map((function(e,r){return(0,_.tZ)("circle",{cx:e.x,cy:e.y,r:8,onClick:function(e){t(n.filter((function(e,n){return r!==n}))),e.stopPropagation()}},r)}))})]})})}var A=(0,c.iv)(j||(j=(0,r.Z)(["\n  border: 1px solid #555555;\n  height: inherit;\n\n  > path.navpoly {\n    fill: rgba(0, 0, 0, 0.01);\n    stroke-width: 2;\n  }\n\n  > g.dots circle {\n    fill: white;\n    stroke: black;\n    stroke-width: 2;\n    cursor: pointer;\n  }\n\n  > polyline.navpath {\n    fill: none;\n    stroke: #00f;\n    stroke-width: 4;\n    stroke-dasharray: 20 10;\n  }\n\n  polygon.navtri {\n    fill: rgba(0, 0, 0, 0);\n    &:hover {\n      fill: rgba(0, 0, 0, 0.2);\n    }\n  }\n"])))}}]);