"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2074],{2074:function(e,t,r){r.d(t,{Z:function(){return Z}});var n=r(92809),o=r(97131),s=r(79056),i=r(30266),u=r(809),c=r.n(u),d=r(88767),a=r(91441),f=r(48103),h=r(8786),l=r(68216),g=r(25997),v=r(91077),y=r(30268),p=r(92953),m=r(34061),k=r.n(m),E=r(84175);function N(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=(0,p.Z)(e);if(t){var o=(0,p.Z)(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return(0,y.Z)(this,r)}}var w=function(e){(0,v.Z)(r,e);var t=N(r);function r(){return(0,l.Z)(this,r),t.apply(this,arguments)}return(0,g.Z)(r,[{key:"getAdjacentDoors",value:function(e){var t=this,r=new Set;return e.forEach((function(e){return t.getSuccs(e).forEach((function(e){return"door"===e.opts.type&&r.add(e)}))})),Array.from(r)}},{key:"getEnterableRooms",value:function(e,t){var r=this;return this.getSuccs(e).filter((function(e){return"door"===e.opts.type&&t.includes(e.opts.doorIndex)})).flatMap((function(e){return r.getSuccs(e)})).filter((function(t){return t.id!==e.id&&"room"===t.opts.type}))}}],[{key:"fromJson",value:function(e){return(new r).from(e)}}]),r}(function(){function e(){(0,l.Z)(this,e),(0,n.Z)(this,"nodes",void 0),(0,n.Z)(this,"succ",void 0),(0,n.Z)(this,"pred",void 0),(0,n.Z)(this,"nodesArray",void 0),(0,n.Z)(this,"edgesArray",void 0),(0,n.Z)(this,"idToNode",void 0),(0,n.Z)(this,"idToEdge",void 0),this.nodes=new Set,this.succ=new Map,this.pred=new Map,this.nodesArray=[],this.edgesArray=[],this.idToNode=new Map,this.idToEdge=new Map}return(0,g.Z)(e,[{key:"getReachableNodes",value:function(e){for(var t=this,r=new Set([e]),n=0,o=[e];r.size>n;)n=r.size,(o=(0,E.xH)(o.map((function(e){return t.getSuccs(e)})))).forEach((function(e){return r.add(e)}));return Array.from(r.values())}},{key:"getReachableUpto",value:function(e,t){for(var r=this,n=new Set([e]),o=0,s=[e];n.size>o;)o=n.size,(s=(0,E.xH)(s.map((function(e){return t(e)?[]:r.getSuccs(e)})))).forEach((function(e){return n.add(e)}));return Array.from(n.values())}},{key:"reset",value:function(){this.nodes.clear(),this.succ.clear(),this.pred.clear(),this.nodesArray=[],this.edgesArray=[],this.idToNode.clear(),this.idToEdge.clear()}},{key:"removeNode",value:function(e){var t=this;return!!this.nodes.has(e)&&(this.nodes.delete(e),(0,E.Dm)(this.nodesArray,e),this.idToNode.delete(e.id),this.getPreds(e).forEach((function(r){return t.removeEdge(t.getEdge(r,e))})),this.getSuccs(e).forEach((function(r){return t.removeEdge(t.getEdge(e,r))})),this.succ.delete(e),this.pred.delete(e),!0)}},{key:"connect",value:function(e){var t=this.getNodeById(e.src),r=this.getNodeById(e.dst);if(t&&r){var n=this.getEdge(t,r);return n?{edge:n,isNew:!1}:(this.registerEdge(e),{edge:n,isNew:!0})}return console.error("Can't connect nodes:",t,r,"given",e,"in",this),{isNew:!1,edge:null}}},{key:"disconnect",value:function(e,t){var r=this.getEdge(e,t);return r?(this.removeEdge(r),!0):(console.error("Failed to disconnect",e,t,"in",this),!1)}},{key:"removeNodeById",value:function(e){var t=this.idToNode.get(e);return!!t&&this.removeNode(t)}},{key:"disconnectById",value:function(e){var t=this.idToEdge.get(e);return t?this.disconnect(t.src,t.dst):(console.error("Cannot remove non-existent edge '".concat(e,"'.")),!1)}},{key:"disconnectByIds",value:function(e,t){var r=this.idToNode.get(e),n=this.idToNode.get(t);return r&&n?this.disconnect(r,n):(console.error("Cannot remove edge ('".concat(e,"' -> '").concat(t,"') from"),r,"to",n),!1)}},{key:"hasNode",value:function(e){return this.nodes.has(e)}},{key:"isConnected",value:function(e,t){var r=this.succ.get(e);return r&&r.has(t)||!1}},{key:"getNodeByid",value:function(e){return this.idToNode.get(e)||null}},{key:"removeEdge",value:function(e){if(e){var t=this.succ.get(e.src);t&&t.delete(e.dst);var r=this.pred.get(e.dst);r&&r.delete(e.src),this.idToEdge.delete(e.id),(0,E.Dm)(this.edgesArray,e)}}},{key:"getParent",value:function(e){var t=this.getPreds(e);return 1===t.length?t[0]:null}},{key:"getSuccs",value:function(e){var t=this.succ.get(e);return t&&Array.from(t.keys())||[]}},{key:"getPreds",value:function(e){var t=this.pred.get(e);return t&&Array.from(t.keys())||[]}},{key:"getEdgesFrom",value:function(e){var t=this.succ.get(e);return t&&Array.from(t.values())||[]}},{key:"getEdgesTo",value:function(e){var t=this.pred.get(e);return t&&Array.from(t.values())||[]}},{key:"nodeHasSucc",value:function(e){var t=this.succ.get(e);return t&&t.size>0||!1}},{key:"nodeHasPred",value:function(e){var t=this.pred.get(e);return t&&t.size>0||!1}},{key:"getNodeById",value:function(e){return this.idToNode.get(e)||null}},{key:"getEdgeById",value:function(e){return this.idToEdge.get(e)||null}},{key:"getEdge",value:function(e,t){var r=this.succ.get(e);return r&&r.get(t)||null}},{key:"registerNode",value:function(e){this.nodes.add(e),this.nodesArray.push(e),this.succ.set(e,new Map),this.pred.set(e,new Map),this.idToNode.set(e.id,e)}},{key:"registerNodes",value:function(e){var t,r=this;e.forEach((function(e){r.nodes.add(e),r.succ.set(e,new Map),r.pred.set(e,new Map),r.idToNode.set(e.id,e)})),(t=this.nodesArray).push.apply(t,(0,o.Z)(e))}},{key:"registerEdge",value:function(e){var t=[this.getNodeById(e.src),this.getNodeById(e.dst)],r=t[0],n=t[1];if(r&&n){var o={src:r,dst:n,id:"".concat(e.src,"->").concat(e.dst),origOpts:e},s=this.succ.get(r),i=this.pred.get(n);s.set(n,o),i.set(r,o),this.idToEdge.set(o.id,o),this.edgesArray.push(o)}else console.warn(k().red("error adding edge"),k().yellow(JSON.stringify(e)))}},{key:"json",value:function(){return{nodes:this.nodesArray.map(E.I8),edges:this.edgesArray.map((function(e){return(0,E.I8)(e.origOpts)}))}}},{key:"from",value:function(e){var t=this,r=e.nodes.map(E.I8);return this.registerNodes(r),e.edges.forEach((function(e){return t.registerEdge(e)})),this}}],[{key:"fromJson",value:function(t){return(new e).from(t)}}]),e}());function O(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function A(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?O(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):O(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Z(e){return(0,d.useQuery)((0,a.tU)(e),(0,i.Z)(c().mark((function t(){var r,n,i,u,d,l,g;return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all([fetch((0,a.tU)(e)).then((function(e){return e.json()})).then(h.Vn),new Promise((function(t,r){var n=new Image;n.onload=function(){return t(n)},n.onerror=r,n.src=(0,a.qX)(e)}))]);case 2:return r=t.sent,n=(0,s.Z)(r,2),i=n[0],u=n[1],d=w.fromJson(i.roomGraph),l=d.nodesArray.filter((function(e){return"room"===e.opts.type})).map((function(e,t){var r=d.getEdgesFrom(e).flatMap((function(e){var t=e.dst;return"door"===t.opts.type?i.doors[t.opts.doorIndex].poly:[]}));return f.LA.union([i.holes[t]].concat((0,o.Z)(r)))[0]})),g=A(A({},i),{},{image:u,d:{hullOutline:i.hullPoly[0].removeHoles(),pngRect:f.UL.fromJson(i.items[0].pngRect),holeCenters:i.holes.map((function(e){return e.rect.center})),roomGraph:d,holesWithDoors:l}}),t.abrupt("return",g);case 10:case"end":return t.stop()}}),t)}))),{keepPreviousData:!0,cacheTime:1/0})}},84175:function(e,t,r){r.d(t,{Nh:function(){return o},xH:function(){return s},Dm:function(){return i},I8:function(){return u}});var n=r(97131);function o(e,t){if(void 0===e)throw new Error("Encountered unexpected undefined value".concat(t?" for '".concat(t,"'"):""));return e}function s(e){var t;return(t=[]).concat.apply(t,(0,n.Z)(e))}function i(e,t){var r=e.indexOf(t);return-1!==r&&e.splice(r,1),e}function u(e){return JSON.parse(JSON.stringify(e))}}}]);